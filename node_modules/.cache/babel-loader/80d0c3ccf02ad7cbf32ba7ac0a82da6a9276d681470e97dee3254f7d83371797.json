{"ast":null,"code":"var _jsxFileName = \"/Users/jaleelwhaley/Desktop/pokeapp/src/pokeGame.js\";\nimport React from \"react\";\nimport Pokedex from \"./pokedex\";\nimport randomPokes from \"./gameShuffle\";\nimport Pokeinfo from \"./pokeInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst handOne = randomPokes(Pokeinfo);\nconst handTwo = randomPokes(Pokeinfo);\np1.total = props.info.reduce((acc, i) => acc + i.base_experience, 0);\n/*\nNext, have the Pokegame component determine which hand is the “winner,”\n where the winning hand is the one with the higher total experience.\n\n Then modify the Pokedex component one more time so that it accepts a prop of isWinner.\n If the Pokedex is the winning one, it should display the message “THIS HAND WINS!” at the bottom of the deck.\n */\n\nconst PokeGame = () => {\n  const p1 = /*#__PURE__*/_jsxDEV(Pokedex, {\n    info: handOne\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 17\n  }, this);\n  console.log(p1);\n  const p2 = () => {\n    /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" Player 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Pokedex, {\n        info: handOne\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Pokedex, {\n      info: handOne\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" palyer 2 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Pokedex, {\n      info: handTwo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_c = PokeGame;\nexport default PokeGame;\nvar _c;\n$RefreshReg$(_c, \"PokeGame\");","map":{"version":3,"names":["React","Pokedex","randomPokes","Pokeinfo","jsxDEV","_jsxDEV","Fragment","_Fragment","handOne","handTwo","p1","total","props","info","reduce","acc","i","base_experience","PokeGame","fileName","_jsxFileName","lineNumber","columnNumber","console","log","p2","children","_c","$RefreshReg$"],"sources":["/Users/jaleelwhaley/Desktop/pokeapp/src/pokeGame.js"],"sourcesContent":["import React from \"react\";\nimport Pokedex from \"./pokedex\";\nimport randomPokes from \"./gameShuffle\";\nimport Pokeinfo from \"./pokeInfo\";\n\nconst handOne = randomPokes(Pokeinfo);\nconst handTwo = randomPokes(Pokeinfo);\n\np1.total = props.info.reduce((acc, i) => acc + i.base_experience, 0);\n/*\nNext, have the Pokegame component determine which hand is the “winner,”\n where the winning hand is the one with the higher total experience.\n\n Then modify the Pokedex component one more time so that it accepts a prop of isWinner.\n If the Pokedex is the winning one, it should display the message “THIS HAND WINS!” at the bottom of the deck.\n */\n\n\n\nconst PokeGame = () => {\n    const p1 =  <Pokedex info={handOne} />\n     \n    console.log(p1)\n    const p2 = () => {\n        <>\n            <h3> Player 1</h3>\n            <Pokedex info={handOne} />\n        </>\n    };\n\n\n    return (\n        <>\n           \n           <Pokedex info={handOne} />\n        <h3> palyer 2 </h3>\n        <Pokedex info={handTwo} />\n      </>\n   \n    )\n}\nexport default PokeGame"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,OAAO,GAAGN,WAAW,CAACC,QAAQ,CAAC;AACrC,MAAMM,OAAO,GAAGP,WAAW,CAACC,QAAQ,CAAC;AAErCO,EAAE,CAACC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAKD,GAAG,GAAGC,CAAC,CAACC,eAAe,EAAE,CAAC,CAAC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACnB,MAAMR,EAAE,gBAAIL,OAAA,CAACJ,OAAO;IAACY,IAAI,EAAEL;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAEtCC,OAAO,CAACC,GAAG,CAACd,EAAE,CAAC;EACf,MAAMe,EAAE,GAAGA,CAAA,KAAM;IACb,aAAApB,OAAA,CAAAE,SAAA;MAAAmB,QAAA,gBACIrB,OAAA;QAAAqB,QAAA,EAAI;MAAS;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClBjB,OAAA,CAACJ,OAAO;QAACY,IAAI,EAAEL;MAAQ;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eAC5B,CAAC;EACP,CAAC;EAGD,oBACIjB,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBAEGrB,OAAA,CAACJ,OAAO;MAACY,IAAI,EAAEL;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7BjB,OAAA;MAAAqB,QAAA,EAAI;IAAU;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBjB,OAAA,CAACJ,OAAO;MAACY,IAAI,EAAEJ;IAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC1B,CAAC;AAGT,CAAC;AAAAK,EAAA,GArBKT,QAAQ;AAsBd,eAAeA,QAAQ;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}