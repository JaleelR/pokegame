{"ast":null,"code":"var _jsxFileName = \"/Users/jaleelwhaley/Desktop/pokeapp/src/pokeGame.js\";\nimport React from \"react\";\nimport Pokedex from \"./pokedex\";\nimport randomPokes from \"./gameShuffle\";\nimport Pokeinfo from \"./pokeInfo\";\n\n/*\nNext, have the Pokegame component determine which hand is the “winner,”\n where the winning hand is the one with the higher total experience.\n\n Then modify the Pokedex component one more time so that it accepts a prop of isWinner.\n If the Pokedex is the winning one, it should display the message “THIS HAND WINS!” at the bottom of the deck.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst handOne = randomPokes(Pokeinfo);\nconst handTwo = randomPokes(Pokeinfo);\nconst p1 = handOne.reduce((acc, i) => acc + i.base_experience, 0);\nconst p2 = handTwo.reduce((acc, i) => acc + i.base_experience, 0);\nconst PokeGame = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Pokedex, {\n      info: handOne\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" palyer 2 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Pokedex, {\n      info: handTwo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_c = PokeGame;\nexport default PokeGame;\nvar _c;\n$RefreshReg$(_c, \"PokeGame\");","map":{"version":3,"names":["React","Pokedex","randomPokes","Pokeinfo","jsxDEV","_jsxDEV","Fragment","_Fragment","handOne","handTwo","p1","reduce","acc","i","base_experience","p2","PokeGame","children","info","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jaleelwhaley/Desktop/pokeapp/src/pokeGame.js"],"sourcesContent":["import React from \"react\";\nimport Pokedex from \"./pokedex\";\nimport randomPokes from \"./gameShuffle\";\nimport Pokeinfo from \"./pokeInfo\";\n\n\n\n/*\nNext, have the Pokegame component determine which hand is the “winner,”\n where the winning hand is the one with the higher total experience.\n\n Then modify the Pokedex component one more time so that it accepts a prop of isWinner.\n If the Pokedex is the winning one, it should display the message “THIS HAND WINS!” at the bottom of the deck.\n */\n\n\n    \nconst handOne = randomPokes(Pokeinfo);\nconst handTwo = randomPokes(Pokeinfo);\n\nconst p1 = handOne.reduce((acc, i) => acc + i.base_experience, 0);\nconst p2 = handTwo.reduce((acc, i) => acc + i.base_experience, 0); \nconst PokeGame = () => {\n    \n\n   \n    \n\n\n    return (\n        <>\n           \n           <Pokedex info={handOne} />\n        <h3> palyer 2 </h3>\n        <Pokedex info={handTwo} />\n      </>\n   \n    )\n}\nexport default PokeGame"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,QAAQ,MAAM,YAAY;;AAIjC;AACA;AACA;AACA;AACA;AACA;AACA;AANA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAUA,MAAMC,OAAO,GAAGN,WAAW,CAACC,QAAQ,CAAC;AACrC,MAAMM,OAAO,GAAGP,WAAW,CAACC,QAAQ,CAAC;AAErC,MAAMO,EAAE,GAAGF,OAAO,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAKD,GAAG,GAAGC,CAAC,CAACC,eAAe,EAAE,CAAC,CAAC;AACjE,MAAMC,EAAE,GAAGN,OAAO,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAKD,GAAG,GAAGC,CAAC,CAACC,eAAe,EAAE,CAAC,CAAC;AACjE,MAAME,QAAQ,GAAGA,CAAA,KAAM;EAOnB,oBACIX,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBAEGZ,OAAA,CAACJ,OAAO;MAACiB,IAAI,EAAEV;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7BjB,OAAA;MAAAY,QAAA,EAAI;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBjB,OAAA,CAACJ,OAAO;MAACiB,IAAI,EAAET;IAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC1B,CAAC;AAGT,CAAC;AAAAC,EAAA,GAhBKP,QAAQ;AAiBd,eAAeA,QAAQ;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}